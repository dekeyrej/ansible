---
- name: Install snaps in classic mode
  community.general.snap:
    name: 
      - microk8s
      - kubectl
    classic: true

- name: Add ubuntu to group microk8s
  ansible.builtin.user:
    name: ubuntu
    groups: microk8s
    append: yes

#=== copy new RFC 5280 compliant cert to /var/snap/microk8s/current/certs/cadir and kickoff a refresh_certs
- name: make the directory
  ansible.builtin.file:
    path: /var/snap/microk8s/current/certs/cadir
    state: directory
    mode: 0755
    owner: root
    group: microk8s
  when: new_ca == true

- name: Copy ca.crt to /var/snap/microk8s/current/certs/cadir/
  ansible.builtin.copy:
    src: "{{ ca_base_path }}/{{ ca_cert_name }}"
    dest: /var/snap/microk8s/current/certs/cadir/ca.crt
  when: new_ca == true

- name: Copy ca.key to /var/snap/microk8s/current/certs/cadir/
  ansible.builtin.copy:
    src: "{{ ca_base_path }}/{{ ca_key_name }}"
    dest: /var/snap/microk8s/current/certs/cadir/ca.key
  when: new_ca == true

# - name: Copy ca.crt to /var/snap/microk8s/current/certs/cadir/
#   ansible.posix.syncronize:
#     src: "{{ ca_base_path }}/{{ ca_cert_name }}"
#     dest: /var/snap/microk8s/current/certs/cadir/ca.crt
#   delegate_to: "{{ ca_host }}"
#   when: new_ca == true

# - name: Copy ca.key to /var/snap/microk8s/current/certs/cadir/
#   ansible.posix.syncronize:
#     src: "{{ ca_base_path }}/{{ ca_key_name }}"
#     dest: /var/snap/microk8s/current/certs/cadir/ca.key
#   delegate_to: "{{ ca_host }}"
#   when: new_ca == true

# - name: copy new RFC 5280 compliant certificate authority to /var/snap/microk8s/current/certs/cadir
#   ansible.builtin.copy:
#     src: "/home/ubuntu/certificate_authority/{{ item }}"
#     dest: "/var/snap/microk8s/current/certs/cadir/{{ item }}"
#   loop: "{{ cafiles }}"
#   when: new_ca == true

- name: tell microk8s to refresh-certs
  ansible.builtin.shell: 
    cmd: microk8s.refresh-certs cadir
    chdir: /var/snap/microk8s/current/certs/
  when: new_ca == true

- name: restart microk8s
  ansible.builtin.shell: |
    microk8s stop
    microk8s start
  when: new_ca == true
- name: Create certificate_authority directory, if it doesn't exist
  ansible.builtin.file:
    path: "{{ ca_base_path }}"
    state: directory

# community.crypto.openssl_privatekey defaults to 4096 bits and RSA
- name: Create private key with password protection
  community.crypto.openssl_privatekey:
    path: "{{ ca_base_path }}/{{ ca_key_name }}"

- name: Create certificate signing request (CSR) for CA certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ ca_base_path }}/{{ ca_key_name }}"
    ### Optional keys
    country_name: "{{ country }}"
    state_or_province_name: "{{ state }}"
    locality_name: "{{ locality }}"
    organization_name: "{{ organization }}"
    organizational_unit_name: "{{ organizational_unit }}"
    ### End Optional keys
    common_name: "{{ common_name }}"
    use_common_name_for_san: false  # since we do not specify SANs, don't use CN as a SAN
    basic_constraints:
      - 'CA:TRUE'
    basic_constraints_critical: true
    ### Python 3.13 specific keyUsage keys
    key_usage:
      - keyCertSign
      - digitalSignature
    key_usage_critical: true
    ### End Python 3.13 specific keys
  register: ca_csr

- name: Create self-signed CA certificate from CSR
  community.crypto.x509_certificate:
    path: "{{ ca_base_path }}/{{ ca_cert_name }}"
    csr_content: "{{ ca_csr.csr }}"
    privatekey_path: "{{ ca_base_path }}/{{ ca_key_name }}"
    provider: selfsigned
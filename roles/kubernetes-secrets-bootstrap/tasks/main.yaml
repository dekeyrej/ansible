---
- name: python3-kubernetes 
  ansible.builtin.apt:
    pkg: python3-kubernetes

- name: create directory if it doesn't exist
  ansible.builtin.file:
    path: /tmp/encryptonator
    state: directory

#=== Curl in latest encryptonator ===#
- name: Use all manifests
  ansible.builtin.set_fact:
    selected_manifests: "{{ manifests.values() | list | flatten }}"

- name: Initialize raw_urls
  ansible.builtin.set_fact:
    raw_urls: []

- name: Build raw URLs from selected manifests
  vars:
    repo_path: "{{ item | regex_findall('https://github.com/([^/]+/[^/]+)/blob/(.+)') | list }}"
    raw_url: "https://raw.githubusercontent.com/{{ repo_path[0][0] }}/{{ repo_path[0][1] }}"
  ansible.builtin.set_fact:
    raw_urls: "{{ raw_urls + [raw_url] }}"
  loop: "{{ selected_manifests }}"

- name: Download selected manifests
  ansible.builtin.get_url:
    url: "{{ item }}"
    dest: "/tmp/encryptonator/{{ item | basename }}"
  loop: "{{ raw_urls }}"

- name: copy in ca.crt
  ansible.builtin.copy:
    src: /home/ubuntu/certificate_authority/ca.crt
    dest: /tmp/encryptonator

- name: edit encryptonator - remove 'sys.append.path...'
  ansible.builtin.lineinfile:
    path: /tmp/encryptonator/encryptonator.py
    regexp: '^sys.path.append'
    state: absent

- name: Extract encrypted JSON-text from secrets.json
  ansible.builtin.set_fact:
    secret_json_text : "{{ lookup('ansible.builtin.file', role_path ~ '/files/secrets.json') | from_json }}"

- name: check if /tmp/encryptonator/venv exists
  ansible.builtin.stat:
    path: /tmp/encryptonator/venv/bin/python
  register: venv_stat

- name: Setup encryptonator virtualenv
  ansible.builtin.shell:
    cmd: |
      python3 -m venv venv
      source venv/bin/activate
      pip install -r requirements.txt
    chdir: /tmp/encryptonator
    executable: /usr/bin/bash
  when: not venv_stat.stat.exists

- name: Run encryptonator
  ansible.builtin.shell:
    cmd: |
      source venv/bin/activate
      python encryptonator.py --json '"{{ secret_json_text }}"'
    chdir: /tmp/encryptonator
    executable: /usr/bin/bash
  no_log: true
  register: encryptonator_output

- name: debug
  ansible.builtin.debug:
    var: encryptonator_output.stderr_lines

#=== Create configMap of events_data ===#
- name: create configMap of events data
  kubernetes.core.k8s:
    state: present
    definition: 
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: matrix-events
        namespace: default
      data:
        events.json: "{{ event_data | from_json | to_nice_json }}"

---
# kubectl stuff
# - shell: kubectl create serviceaccount vault-auth -n default
# - shell: kubectl apply -f files/default-va-token.yaml
# - shell: kubectl patch serviceaccount vault-auth -p '{"secrets": [{"name": "vault-auth-token"}]}'
# - shell: kubectl get secret $(kubectl get serviceaccount vault-auth -o jsonpath='{.secrets[0].name}') -o jsonpath='{.data.token}' | base64 --decode  > rsat.tk
# - shell: kubectl config view --raw --minify --flatten -o jsonpath='{.clusters[].cluster.certificate-authority-data}' | base64 --decode > ca.crt
# vault stuff
# - shell: "vault login {{ vault_root_token }}"
# - shell: vault auth enable kubernetes
- shell: vault write auth/kubernetes/config token_reviewer_jwt=@rsat.tk kubernetes_host="{{ kubeapiaddress }}" kubernetes_ca_cert=@ca.crt
- shell: vault policy write my-app-policy my-app-policy.hcl
- shell: vault write auth/kubernetes/role/demo  bound_service_account_namespaces=default  bound_service_account_names=default policies=my-app-policy ttl=10s
# test kubernetes login
- shell: vault write auth/kubernetes/login role=demo jwt=$(kubectl create token default)
# setup transit keys/encryption
- shell: vault secrets enable transit
- shell: vault write -f transit/keys/aes256-key


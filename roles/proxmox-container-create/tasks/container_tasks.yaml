---
- name: "Assemble 'ip_info' for hostname: {{ item }}"
  ansible.builtin.set_fact:
    ip_info: >-
      {{ (hostvars[item]['static_ip'] + '/24,gw=' + gateway)
         if 'static_ip' in hostvars[item]
         else 'dhcp' }}

- name: Create Proxmox-VE Container with vmid
  community.general.proxmox:
    api_host: "{{ node }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    node: "{{ node }}"
    vmid: "{{ hostvars[item]['vmid'] }}"
    hostname: "{{ item }}"
    ostemplate: "{{ template }}"
    disk: "{{ diskpool }}:{{rootsize}}"
    # disk_volume:    # requires community.general 9.2.0 or greater
    #   storage: "{{ diskpool }}"
    #   size: "{{ rootsize }}"
    netif:
      net0: "name=eth0,bridge={{ bridge }},ip={{ ip_info }}"
    unprivileged: "{{ unprivileged }}" 
    onboot: "{{ onboot }}"
    pool: "{{ pool }}"
    cores: "{{ cores }}"
    memory: "{{ memory }}"
    swap: "{{ swap }}"
    pubkey: "ssh-rsa {{ sshkey }}"
    state: present
  when: hostvars[item]['vmid'] is defined

- name: Create Proxmox-VE Container without vmid
  community.general.proxmox:
    api_host: "{{ node }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    node: "{{ node }}"
    hostname: "{{ item }}"
    ostemplate: "{{ template }}"
    disk: "{{ diskpool }}:{{rootsize}}"
    # disk_volume:    # requires community.general 9.2.0 or greater
    #   storage: "{{ diskpool }}"
    #   size: "{{ rootsize }}"
    netif:
      net0: "name=eth0,bridge={{ bridge }},ip={{ ip_info }}"
    unprivileged: "{{ unprivileged }}" 
    onboot: "{{ onboot }}"
    pool: "{{ pool }}"
    cores: "{{ cores }}"
    memory: "{{ memory }}"
    swap: "{{ swap }}"
    pubkey: "ssh-rsa {{ sshkey }}"
    state: present
  when: hostvars[item]['vmid'] is not defined

- name: try to get the vmid for the hostname
  community.general.proxmox_vm_info:
    api_host: "{{ node }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    node: "{{ node }}"
    type: lxc
    name: "{{ item }}"
    config: current
  register: vminfo
  until: vminfo.proxmox_vms[0].vmid is defined
 
- name: Set the resolved vmid
  ansible.builtin.set_fact:
    resolved_vmid: "{{ hostvars[item]['vmid'] | default(vminfo.proxmox_vms[0].vmid | int) }}"

- name: Start Container
  community.general.proxmox:
    api_host: "{{ node }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    vmid: "{{ resolved_vmid }}"
    state: started
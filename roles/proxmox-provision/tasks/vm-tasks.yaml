# roles/proxmox-provision/tasks/vm-tasks.yaml
- name: "set diskimage based on 'type', 'os' and 'release' for {{ inventory_hostname }}"
  ansible.builtin.set_fact:
    diskimg: "{{ vmimage_path }}{{ images[type][os][release]['target'] }}"

- name: "Assemble 'ip_info' for hostname: {{ inventory_hostname }}"
  ansible.builtin.set_fact:
    ip_info: >-
      {{
        (
          static_ip + '/24,gw=' + gateway
          if static_ip is defined
          else 'dhcp'
        ) | trim
      }}

- name: Block delegated to localhost
  delegate_to: localhost
  block:
  - name: "Create VM {{ inventory_hostname }}, VMID: {{ vmid }}"
    community.general.proxmox_kvm:
      api_user: "{{ api_user }}"
      api_password: "{{ api_password }}"
      api_host: "{{ node }}"
      name: "{{ inventory_hostname }}"
      citype: nocloud
      ciupgrade: true
      ciuser: ubuntu
      sshkeys: "ssh-rsa {{ sha[1] }} manwe@valar"
      node: "{{ node }}"
      vmid: "{{ vmid }}"
      balloon: "{{ memory }}"
      memory: "{{ maxmemory }}"
      cores: "{{ cores }}"
      cpulimit: "{{ cpulimit }}"
      cpu: "cputype={{ cputype }}"
      ide:
        ide2: "{{ diskpool }}:cloudinit"
      net:
        net0: "{{ netinf }}"
      ipconfig:
        ipconfig0: "ip={{ ip_info }}"
      scsihw: "{{ scsinf }}"
      ostype: "{{ vmostype }}"
      boot: "order={{ bootdiskname }}"
      agent: "{{ agent }}"
      pool: "{{ pool }}"
      protection: "{{ protection }}"
      state: present
    when: vmid is defined

  - name: "Create VM {{ inventory_hostname }}"
    community.general.proxmox_kvm:
      api_user: "{{ api_user }}"
      api_password: "{{ api_password }}"
      api_host: "{{ node }}"
      name: "{{ inventory_hostname }}"
      citype: nocloud
      ciupgrade: true
      ciuser: ubuntu
      sshkeys: "ssh-rsa {{ sha[1] }} manwe@valar"
      node: "{{ node }}"
      balloon: "{{ memory }}"
      memory: "{{ maxmemory }}"
      cores: "{{ cores }}"
      cpulimit: "{{ cpulimit }}"
      cpu: "cputype={{ cputype }}"
      ide:
        ide2: "{{ diskpool }}:cloudinit"
      net:
        net0: "{{ netinf }}"
      ipconfig:
        ipconfig0: "ip={{ ip_info }}"
      scsihw: "{{ scsinf }}"
      ostype: "{{ vmostype }}"
      boot: "order={{ bootdiskname }}"
      agent: "{{ agent }}"
      pool: "{{ pool }}"
      protection: "{{ protection }}"
      state: present
    register: create_result
    when: vmid is not defined

  - name: Set the resolved vmid
    ansible.builtin.set_fact:
      resolved_vmid: "{{ vmid | default(create_result.vmid | int) }}"

- name: "Add boot disk from image for VM {{ inventory_hostname }}, VMID: {{ resolved_vmid }}"
  community.general.proxmox_disk:
    api_user: "{{ root_api_user }}"            # this one task requires root@pam access
    api_password: "{{ root_api_password }}"    # this one task requires root@pam access
    api_host: "{{ node }}"
    vmid: "{{ resolved_vmid }}"
    disk: "{{ bootdiskname }}"
    storage: "{{ diskpool }}"
    import_from: "{{ diskimg }}"
  delegate_to: "{{ node }}"

- name: Block delegated to localhost
  delegate_to: localhost
  block:
  - name: "Resize boot disk for VM {{ inventory_hostname }}, VMID: {{ resolved_vmid }}"
    community.general.proxmox_disk:
      api_user: "{{ api_user }}"
      api_password: "{{ api_password }}"
      api_host: "{{ node }}"
      vmid: "{{ resolved_vmid }}"
      disk: "{{ bootdiskname }}"
      size: "{{ rootsize }}G"
      state: resized

  - name: Start the VM(s)
    community.general.proxmox_kvm:
      api_user: "{{ api_user }}"
      api_password: "{{ api_password }}"
      api_host: "{{ node }}"
      node: "{{ node }}"
      vmid: "{{ resolved_vmid }}"
      state: started

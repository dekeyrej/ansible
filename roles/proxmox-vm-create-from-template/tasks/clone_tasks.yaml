---
- name: "Clone template {{ templatevmid }} to VM {{ hostvars[item]['vmid'] }}"
  community.general.proxmox_kvm:
    api_host: "{{ node }}"
    api_user: "{{ api_user }}"
    api_token_id: "{{ api_token_id }}"
    api_token_secret: "{{ api_token_secret }}"
    node: "{{ node }}"
    # clone: temp # 
    vmid: "{{ templatevmid }}"  # source (template) VMid
    newid: "{{ hostvars[item]['vmid'] }}"   # if not specified, next available will be returned
    name: "{{ item }}"
    storage: "{{ diskpool }}"
    full: true   # make a full clone, not a linked one
    pool: Iluvatar
    state: present

- name: "Check vm disk size for VM {{ hostvars[item]['vmid'] }}"
  community.general.proxmox_vm_info:
    api_host: "{{ node }}"
    api_user: "{{ api_user }}"
    api_token_id: "{{ api_token_id }}"
    api_token_secret: "{{ api_token_secret }}"
    vmid: "{{ hostvars[item]['vmid'] }}"
  register: vm_info
  until: vm_info.proxmox_vms is defined and vm_info.proxmox_vms[0].maxdisk | int > 0
  retries: 5
  delay: 2
  
- name: "Resize boot disk for VM {{ hostvars[item]['vmid'] }}"
  community.general.proxmox_disk:
    api_host: "{{ node }}"
    api_user: "{{ api_user }}"
    api_token_id: "{{ api_token_id }}"
    api_token_secret: "{{ api_token_secret }}"
    vmid: "{{ hostvars[item]['vmid'] }}"
    disk: "{{ bootdiskname }}"
    size: "{{ diskincrement }}"
    state: resized
  when: vm_info.proxmox_vms[0].maxdisk | int < 5000000000  # 5GB - base image  is about 3.5G

- name: "Create userconfig-vmid for VM {{ hostvars[item]['vmid'] }}"
  ansible.builtin.template:
    src: cloud-init.yaml.j2
    dest: "/var/lib/vz/snippets/userconfig-{{ hostvars[item]['vmid'] }}.yaml"

- name: "Update for VM {{ hostvars[item]['vmid'] }}"
  community.general.proxmox_kvm:
    api_host: "{{ node }}"
    api_user: "{{ api_user }}"
    api_token_id: "{{ api_token_id }}"
    api_token_secret: "{{ api_token_secret }}"
    node: "{{ node }}"
    vmid: "{{ hostvars[item]['vmid'] }}"
    cicustom: "user=local:snippets/userconfig-{{ hostvars[item]['vmid'] }}.yaml"
    name: "{{ item }}"
    ipconfig: 
      ipconfig0: "ip={{ hostvars[item]['ansible_host'] }}/24,gw=192.168.86.1"
    update: true

# - pause:
#     seconds: 5

- name: "Start VM {{ hostvars[item]['vmid'] }}"
  community.general.proxmox_kvm:
    api_host: "{{ node }}"
    api_user: "{{ api_user }}"
    api_token_id: "{{ api_token_id }}"
    api_token_secret: "{{ api_token_secret }}"
    node: "{{ node }}"
    vmid: "{{ hostvars[item]['vmid'] }}"
    state: started
  # register: retval
  # until: retval.status is defined and retval.status == "running"
  # retries: 5
  # delay: 2
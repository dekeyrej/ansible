- name: copy cluster recipe
  ansible.builtin.copy:
    src: /home/ubuntu/cluster_recipe
    dest: /home/ubuntu

- name: provision kubegres cluster
  ansible.builtin.shell:
    cmd: | 
      kubectl apply -f https://raw.githubusercontent.com/reactive-tech/kubegres/v1.19/kubegres.yaml
      kubectl apply -f kubegres
    chdir: /home/ubuntu/cluster_recipe/

- name: provision redis
  ansible.builtin.shell:
    cmd: kubectl apply -f redis
    chdir: /home/ubuntu/cluster_recipe/

- name: update ingress configmap for kubegres and redis
  ansible.builtin.shell: kubectl patch configmap nginx-ingress-tcp-microk8s-conf -n ingress --type='json' --patch-file /home/ubuntu/cluster_recipe/deployment/cm.json

- name: patch ingress daemonset for kubegres and redis
  ansible.builtin.shell: kubectl patch daemonset nginx-ingress-microk8s-controller -n ingress --type='json' --patch-file /home/ubuntu/cluster_recipe/deployment/ds.json

- name: pause for ingress changes to take effect
  ansible.builtin.wait_for:
    port: 5432
    delay: 10
    sleep: 10

- name: create database
  community.postgresql.postgresql_db:
    login_host: "{{ inventory_hostname }}"
    login_user: postgres
    login_password: "{{ supassword }}"
    name: matrix

- name: create user
  community.postgresql.postgresql_user:
    login_host: "{{ inventory_hostname }}"
    login_user: postgres
    login_password: "{{ supassword }}"
    name: "{{ matrixuser }}"
    role_attr_flags: SUPERUSER
    db: matrix
    password: "{{ matrixpassword }}"
    
- name: grant priviledges on database to user
  community.postgresql.postgresql_privs:
    login_host: "{{ inventory_hostname }}"
    login_user: postgres
    login_password: "{{ supassword }}"
    db: matrix
    privs: ALL
    type: database
    role: "{{ matrixuser }}"
---
# 00_proxmox.yaml
# Provisions Proxmox VMs and containers, sets up Vault with TLS and auto-unseal
# Requires: community.general collection, access to PVE API, and configured CA vars

#=== Create Certificate Authority ===
# Creates an RFC 5280 compliant Certificate Authority (which makes Python 3.13 happy)
- name: Establish Certificate Authority
  hosts: localhost
  connection: local
  roles:
    - role: certificate-authority
      vars_files:
        - ca_vars.yaml

#=== Remove known_host entries to keep ssh from squaking ==
# handy routine to clean up the known_hosts file to avoid nasty warnings when provisioning/tearing down
- name: Clear known_hosts
  hosts: localhost
  connection: local
  tasks:
    - name: Loop through hosts removing previous entries from /home/ubuntu/.ssh/known_hosts
      ansible.builtin.shell:
        cmd: "ssh-keygen -f '/home/ubuntu/.ssh/known_hosts' -R {{ item }}"
      loop: "{{ groups['allnodes'] }}"

#=== Provision VMs to be microceph/microk8s cluster nodes ===

# - name: Create VM Template and Provision Proxmox VM hosts for Kubernetes cluster
#   hosts: pvenode
#   become: no  # root user only on PVE Node
#   vars_files:
#     - 01_template_overrides.yaml
#     - 03_sha_keys.yaml
#   roles:
#     - role: proxmox-node-setup
#       this role creates a VM to be the template for the actual hosts to be provisioned
#       -- note -- "import image to disk" requires root@pam credentials to import from an absolute path
#     - role: proxmox-vm-create-template
#       this role makes a series of clones based on the info in 03_host_list.yaml
#       -- note -- user@pve PVEAdmin level credentials are sufficient for this role
#     - role: proxmox-vm-create-from-template
#       vars:
#         host_group: allnodes

- name: Provision Proxmox VM hosts for Kubernetes cluster
  hosts: pvenode
  become: no  # root user only on PVE Node
  vars_files:
    - 03_sha_keys.yaml   # structered as a list of keys
  vars:
    host_group: allnodes
    pool: Lothlorien
    balloon: 4096
    memory: 16384
    diskincrement: +46.5G
    protection: true
  roles:
    - role: proxmox-node-setup
    - role: proxmox-vm-fetch-image
    - role: proxmox-vm-create


#=== Provision and Configure Vault Container ===

# Additional role to create an LXC Container on proxmox using the community.general.proxmox module
- name: create Proxmox Container for Vault
  hosts: pvenode
  vars:
    host_group: vault
  roles:
    - role: proxmox-node-setup
    - role: proxmox-container-create

# Creates RFC 2818 compliant TLS certificates with IP SANs (which makes Vault happy)
#   works with Certificate Authority above
- name: TLS keys for server
  hosts: localhost
  connection: local
  vars:
    host_group: vault
  roles:
    - role: certificate-authority-generate-certs

# wait for the container to settle...
- name: wait a bit
  localhost:
  connection: local
  tasks:
    - name: wait a bit
      ansible.builtin.pause:
        seconds: 10
      
# Adds CA to cert store, installs vault package, 
#   configures vault (TLS Keys and configuration including gcpckms auto-unseal),
#   enables/starts the vault service, and initializes the vault - writing the root token and 
#   unseal keys back to the ansible host
- name: Setup Vault
  hosts: vault
  roles:
    - role: certificate-authority-copy-to-host
    - role: apt-vault-add-source
    - role: apt-update-all
    - role: apt-add-packages
      vars:
        packages: vault
    - role: vault-configure
    - role: vault-initialize
        